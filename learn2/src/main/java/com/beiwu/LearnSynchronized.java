package com.beiwu;

/**
 * Synchronized 用过吗，其原理是什么？
 * @author zhoubing
 * @date 2021-06-30 14:51
 */
public class LearnSynchronized {
    //Synchronized就是锁。
    // 通过对某种资源的独占，已实现多线程对某种资源的共享和
    // 可以对 对象加锁、成员方法加锁、静态方法加锁


    // 你刚才提到获取对象的锁，这个“锁”到底是什么？如何确定对象的锁？
    // 锁我理解的就是对某种资源的独占，比如多个线程都要对一个变量进行修改，锁代表了某个时刻只有它可以对变量进行修改，其余线程不能操作

    // 什么是可重入性，为什么说 Synchronized 是可重入锁？
    // 可重入性，代表某个线程 递归的情况下，还是可以获取当前这个锁。

    // JVM 对 Java 的原生锁做了哪些优化？
    // 之前Java6它的实现，是基于操作系统的互斥锁，所以非常重
    // 到了Java8之后，全部换成了锁的升级和降级 会利用CAS操作

    //为什么说 Synchronized 是一个悲观锁？乐观锁的实现原理又是什么？什么是

}
